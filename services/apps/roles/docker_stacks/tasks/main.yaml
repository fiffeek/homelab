---
- name: Create dirs
  become: true
  ansible.builtin.file:
    path: "{{ stacks.dest }}/{{ item.dir }}"
    state: directory
    mode: "0777"
  loop: "{{ stacks.order }}"
- name: Set directories ownership to {{ remote_user_id }}
  become: true
  ansible.builtin.file:
    path: "{{ stacks.dest }}/{{ item.dir }}"
    owner: "{{ remote_user_id }}"
    group: "{{ remote_user_id }}"
  loop: "{{ stacks.order }}"
- name: Copy stacks to VPS
  tags:
    - deploy
    - templates
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/../stacks/{{ ansible_host }}/"
    dest: "{{ stacks.dest }}"
    decrypt: true
    mode: "0644"
- name: Copy common to VPS
  tags:
    - deploy
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/../stacks/common/"
    dest: "{{ stacks.common.dest }}"
    decrypt: true
    mode: "0644"
- name: Find all templates
  ansible.builtin.find:
    paths: "{{ local_path }}"
    patterns: "*.j2"
    recurse: true
    file_type: file
  delegate_to: localhost
  register: found_templates
  vars:
    local_path: "{{ playbook_dir }}/../stacks/{{ inventory_hostname }}"
  tags:
    - deploy
    - templates
- name: Record all hostnames
  ansible.builtin.set_fact:
    host_list: "{{ groups['all'] }}"
  tags:
    - deploy
    - templates
- name: Copy templates to VPS
  ansible.builtin.template:
    src: "{{ item.path }}"
    # yamllint disable-line rule:line-length
    dest: "{{ stacks.dest }}/{{ item.path | regex_replace('^' + strip_path, '') }}"
    mode: "0644"
  loop: "{{ found_templates.files }}"
  vars:
    # yamllint disable-line rule:line-length
    strip_path: "{{ (playbook_dir ~ '/../stacks/' ~ inventory_hostname) | realpath }}"
  tags:
    - deploy
    - templates
- name: Start services
  tags:
    - deploy
    - skip_ansible_lint
  ansible.builtin.command:
    cmd: docker compose -f docker-compose.yaml up --build -d --force-recreate
    chdir: "{{ stacks.dest }}/{{ item.dir }}"
  loop: "{{ stacks.order }}"
